
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import static java.lang.Integer.valueOf;
import static java.lang.Short.valueOf;
import static java.lang.String.valueOf;
import java.util.ArrayList;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import LoTECCFileChooserFilters.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lenovo
 */
public class Filter extends javax.swing.JFrame {

    /**
     * Creates new form Filter
     */
    public Filter() {
        initComponents();
    }
    
        ArrayList<String>names= new ArrayList<>();
        ArrayList<String>races= new ArrayList<>();
        ArrayList<String>smartsies= new ArrayList<>();
        ArrayList<String>gnomes=new ArrayList();
        ArrayList<Integer>raceIndex= new ArrayList<>();
        ArrayList<Integer>smartsIndex=new ArrayList<>();
        ArrayList<String>smartguys= new ArrayList<>();
        
        int lines=0;
        int counter;


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        SmartsAbove = new javax.swing.JSpinner();
        Search = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Rozum powyżej:");

        SmartsAbove.setModel(new javax.swing.SpinnerNumberModel(0, 0, 8, 1));

        Search.setText("Szukaj");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        jButton2.setText("Wróć");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Search))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SmartsAbove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(SmartsAbove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(Search)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
            
            
            
            
    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed

        lines=0;
        races.clear();
        names.clear();
        smartsies.clear();
        raceIndex.clear();
        smartsIndex.clear();
        int howSmartIs=((int)SmartsAbove.getValue());
       
       
        
            
        BufferedReader br;
        try {
            br = new BufferedReader(new FileReader("plikzbiorczy.txt"));
            while(br.readLine() !=null)
            {
                lines++;
            }
            br.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Filter.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Filter.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(lines);
        
        String whateverline;
        counter = lines/3;
        
        
            try {
                br = new BufferedReader(new FileReader("plikzbiorczy.txt"));
                for(int i=0; i<counter; i++)
                {
                
                
                whateverline = br.readLine();
                int index = whateverline.indexOf('='); //Problem z źle ułożonymi propertiesami. 
                String property = whateverline.substring(index+1); //index +1 bo z samym "index" zapisze się również znak '='
                races.add(property);
                
                
                whateverline = br.readLine();
                index = whateverline.indexOf('=');
                property = whateverline.substring(index+1);                
                smartsies.add(property);
                
                whateverline = br.readLine();
                index = whateverline.indexOf('=');
                property = whateverline.substring(index+1);     
                names.add(property);
                }
                
            } catch (IOException ex) {
                Logger.getLogger(Filter.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        System.out.println(races);
        System.out.println(smartsies);
        System.out.println(names);
        
        int x = races.size();
        for (int i=0;i<x;i++)
        {
            int tmpArray = Integer.valueOf(smartsies.get(i));
            int tmpHigher = ((int)SmartsAbove.getValue());
            
            if(tmpArray>tmpHigher)
            {
                smartguys.add(names.get(i));
            }
        }
        
   
            for(int i=0;i<x;i++)
            {
                String race=races.get(i);
                if(race.equals("Gnom")) //sprawdź jak działa po zrobieniu propertiesów
                {
                    raceIndex.add(i);
                    gnomes.add(names.get(i));
                }
            }
            
        
        
        
        System.out.println(raceIndex);
        System.out.println(gnomes);

        
        

        
        final JFileChooser LoadFile = new JFileChooser();

        LoadFile.setAcceptAllFileFilterUsed(false);
        FileFilter propertiesFilter = new SecureFilter(".properties", "Wszystkie postaci");
        FileFilter gnomeFilter = new CharacterFilter("gnomy", gnomes);
        FileFilter smartsFilter = new CharacterFilter("mądrale", smartguys);
        LoadFile.addChoosableFileFilter(propertiesFilter);
        LoadFile.addChoosableFileFilter(gnomeFilter);
        LoadFile.addChoosableFileFilter(smartsFilter);
        LoadFile.setCurrentDirectory(new File(System.getProperty("user.dir")));
        LoadFile.showOpenDialog(rootPane);
        
                Properties p = new Properties();
        try {
                     
           InputStream is = new FileInputStream(LoadFile.getSelectedFile());
           p.load(is);

        } catch (FileNotFoundException ex) {
            Logger.getLogger(MMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String newname=p.getProperty("name");
        System.out.print(p.getProperty("name"));
        Character c = new Character();
        c.setVisible(true);
        c.LateCharacter(p.getProperty("name"),p.getProperty("race"),p.getProperty("strength"),p.getProperty("dexterity"),p.getProperty("speed"),p.getProperty("endurance"),p.getProperty("smarts"),
            p.getProperty("psyche"),p.getProperty("senses"),p.getProperty("movement"),p.getProperty("health"),p.getProperty("talentPD"),p.getProperty("sanity"),p.getProperty("deckOfFortune"),
            p.getProperty("actionPoints"),p.getProperty("durability"),p.getProperty("maxPD"),p.getProperty("mana"),p.getProperty("dmgreduction"));
        this.dispose();
    }//GEN-LAST:event_SearchActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new MMenu().setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Filter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Filter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Filter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Filter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Filter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Search;
    private javax.swing.JSpinner SmartsAbove;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
